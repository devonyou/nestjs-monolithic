services:
    app:
        build:
            context: .
            dockerfile: ./Dockerfile
            target: development
        command: npm run start:dev
        depends_on:
            mysql:
                condition: service_healthy
        ports:
            - '3000:3000'
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        env_file:
            - ./.env
    worker:
        build:
            context: .
            dockerfile: ./Dockerfile
            target: development
        command: npm run start:dev:worker
        depends_on:
            mysql:
                condition: service_healthy
        ports:
            - '3001:3001'
        volumes:
            - .:/usr/src/app
            - ./assets:/usr/src/app/assets
            - ./public/thumbnail:/usr/src/app/public/thumbnail
            - /usr/src/app/node_modules
        env_file:
            - ./.env
    mysql:
        image: mysql:5.7
        platform: linux/amd64
        ports:
            - '3306:3306'
        volumes:
            - ./mysql/data:/var/lib/mysql
            - ./mysql/my.cnf:/etc/mysql/my.cnf
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-proot']
            interval: 5s
            timeout: 5s
            retries: 10
            start_period: 5s
        environment:
            TZ: Asia/Seoul
            MYSQL_PASSWORD: 'pass1234'
            MYSQL_DATABASE: user
            MYSQL_ROOT_PASSWORD: 'pass1234'
    redis:
        image: redis:7-alpine
        ports:
            - '6379:6379'
        volumes:
            - ./redis:/data
